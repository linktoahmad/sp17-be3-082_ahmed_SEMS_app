-work on bill_ bills (UPDATE now working great)
auto update all fields in bill with respect to unit like cost of unit changes after certain units! all fields must be auto updated 

-work on reports (UPDATE reports ui has been corrected for different screen firebase added!  now need to test with pzem! update days reading after day and month reading after month)
unit array must be corrected!
add a report which shows 30 days comparison!

-work on adding meter (UPDATE add meter and delete is working great! after one time screen update meter id like wise i did in setting screen els all is ok!)
add delete meter function must be added!
on first time screen meter should be slected already (not go to slect screen and slect meter) should me corrected!

-work on print (TBD)
_ print is wirkinf but the report that it print and the location is fucked up!
print a report like real bill!!
and (add safety measures and tips to save electricity)

-work on pezem and check what it can provide for status and add more live status things!
like add electricity frequency , powerfactor etc..

-add a widget if you can!! 
that will show units consumed voltage and amps etc live!!

- creat website? maybe 









import React, { Component } from "react";
import {StyleSheet,TouchableOpacity} from "react-native";
import {Linking} from 'react-native'
import {Block, Text} from "../components";
import { DataTable } from 'react-native-paper';
import { theme} from "../constants";
import firebase from 'firebase';
//import AsyncStorage from "@react-native-async-storage/async-storage";
import {meterId} from './SlectMeter.js';


//const STORAGE_KEY = '@save_unit'
        var unit_value= 0
        var unit_cost= 0
        var Electricity_cost=0
        var fc=0
        var duty=0
        var gst=0
        var nj=0
        var sub_total =0;
        var total=0

class Settings extends Component {

  /*constructor()
  {
      super();
      this.state={
        
      }
      
  }*/

        

  
  componentDidMount() { 
    
    this._isMounted = true;
    const readUsersData = ()=> {
      firebase.database().ref((meterId.toString())+'/unit').on('value', (snapshot)=> {
        if (this._isMounted) {
          const y = snapshot.val()
          this.setState({unit_value:y})
          //AsyncStorage.setItem(STORAGE_KEY, unit_value)

        switch (true) {
          case (y <= 50):
            this.setState({unit_cost:2.00})
            this.setState({Electricity_cost:y*2})
            break;
            case (y > 50 && y <= 100):
              this.setState({unit_cost:5.79})
              this.setState({Electricity_cost:y*5.79})
              break;
              case (y > 100 && y <= 200):
                this.setState({unit_cost:8.11})
                sub_total = 100*5.79
                this.setState({Electricity_cost:(y-100)*8.11+sub_total})
                break;
                case (y > 200 && y <= 300):
                  this.setState({unit_cost:10.20})
                  sub_total = 200*8.11
                  this.setState({Electricity_cost:(y-200)*10.20+sub_total})
                  break;
                  case (y > 300 && y <= 700):
                    this.setState({unit_cost:17.60})
                    sub_total = 300*10.20
                    this.setState({Electricity_cost:(y-300)*17.60+sub_total})
                    break;
                    case ( y > 700):
                      this.setState({unit_cost:20.70})
                      sub_total = 700*17.60
                      this.setState({Electricity_cost:(y-700)*20.70+sub_total})
                      break;
        }

        if(y>0){

          this.setState({total:this.state.Electricity_cost})
    
               
          this.setState({fc:y*0.43})
          this.setState({total: this.state.total+this.state.fc})
    
          this.setState({duty:this.state.total*1.5/100})
          this.setState({total:this.state.total+this.state.duty})
          
          this.setState({gst:this.state.total*0.17})
          this.setState({total:this.state.total+this.state.gst})
          
          this.setState({nj:y/10})
          this.setState({total:this.state.total+this.state.nj})
    
          this.setState({total:this.state.total+this.state.tv})
          
        }
        }
      })
    }
      readUsersData();
  }
  
  
  componentWillUnmount() {
    this._isMounted = false;
  }

   /*  */

  
  
  render() {

    return (
      <Block>
        <Block flex={false} row center space="between" style={styles.header}>
          <Text h1 bold>
            Estimate Bills
          </Text>
          <Text bold center style={{color:theme.colors.secondary}}> 
            {meterId}
          </Text>
        </Block>
        <Block>
        
        <DataTable >

    <DataTable.Header>
      <DataTable.Title>No</DataTable.Title>
      <DataTable.Title style={{flex: 4}}>Title</DataTable.Title>
      <DataTable.Title >Cost</DataTable.Title>
    </DataTable.Header>


    <DataTable.Row>
      <DataTable.Cell>1</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>Unit consumed</DataTable.Cell>
      <Text h3> {this.state.unit_value.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>2</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>Cost of Unit</DataTable.Cell>
      <Text h3> {this.state.unit_cost.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>3</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>Cost of Electricity </DataTable.Cell>
      <Text h3> {this.state.Electricity_cost.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>4</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>FC Surcharge</DataTable.Cell>
      <Text h3> {this.state.fc.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>5</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>Electricity Duty</DataTable.Cell>
      <Text h3> {this.state.duty.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>6</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>TV Fees</DataTable.Cell>
      <Text h3> {this.state.tv.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>7</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>GST</DataTable.Cell>
      <Text h3> {this.state.gst.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
      <DataTable.Cell>8</DataTable.Cell>
      <DataTable.Cell style={{flex: 3}}>N.J Surcharge</DataTable.Cell>
      <Text h3> {this.state.nj.toFixed(2)}</Text>
    </DataTable.Row>
    <DataTable.Row>
        <DataTable.Cell numeric><Text bold color = "red">Estimated Bill </Text></DataTable.Cell>
        <DataTable.Cell><Text bold h3>{this.state.total.toFixed(2)} Rs/-</Text></DataTable.Cell>
    </DataTable.Row>
  </DataTable>

  <TouchableOpacity style={{paddingTop:30}}onPress={()=>{Linking.openURL(`https://iescobill.pk/iesco-bill-calculator/`);}}>
              <Text gray2 center>
                  how bill is calculated
                </Text>
                
              </TouchableOpacity>
        </Block>
        
        
          
      </Block>
    );
  }
}



export default Settings;

const styles = StyleSheet.create({
  header: {
    paddingHorizontal: theme.sizes.base * 2
  }
});





